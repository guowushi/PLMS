package PLMS.server.panes;

import PLMS.Base.WidgetBase;
import PLMS.Checker.IntegerNumberRangeChecker;
import PLMS.DataUnits.AFN04.F1;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import com.jidesoft.swing.JideLabel;

import javax.swing.*;
import java.awt.*;

/**
 * 参数F1的操作界面.
 */
public class setting_F1 extends WidgetBase {
    private JPanel panel1;
    private JTextField textField1;
    private JTextField txt_delay_time;
    private JSpinner spinner_timeouts;
    private JSpinner spinner_repeat;
    private JTextField txt_heart_beat;
    private JRadioButton Rad;
    private JRadioButton RadioButton;
    private JLabel lbl_RTS;
    private JLabel lbl_delay_time;
    private F1 f1;
    //--------------------------------------------------------------

    /**
     * 构造函数
     *
     * @param f1
     */
    public setting_F1(F1 f1) {
        this.f1 = f1;    //绑定的数据对象类
        $$$setupUI$$$();
        executor.add(textField1, new IntegerNumberRangeChecker(0, 60));
        executor.add(txt_delay_time, new IntegerNumberRangeChecker(0, 60));
        executor.add(txt_heart_beat, new IntegerNumberRangeChecker(0, 60));
    }

    @Override
    protected Object collectValues() {
        f1.setHeartBeatCycle(Integer.parseInt(txt_heart_beat.getText()));
        return f1;   //返回获取的数据
    }

    @Override
    public Container getContentPane() {
        return panel1;
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("right:235px:noGrow,left:max(p;50px):grow(0.5),left:40dlu:noGrow,fill:max(d;4px):noGrow,fill:max(d;4px):noGrow", "center:30px:noGrow,center:30px:noGrow,center:30px:noGrow,center:30px:noGrow,center:30px:noGrow,center:30px:noGrow"));
        lbl_RTS = new JLabel();
        lbl_RTS.setText("超时时间");
        CellConstraints cc = new CellConstraints();
        panel1.add(lbl_RTS, cc.xy(1, 1));
        lbl_delay_time = new JLabel();
        lbl_delay_time.setText("最大传输延时");
        panel1.add(lbl_delay_time, cc.xy(1, 2));
        panel1.add(textField1, cc.xy(2, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        txt_delay_time = new JTextField();
        panel1.add(txt_delay_time, cc.xy(2, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JLabel label1 = new JLabel();
        label1.setText("MS ");
        panel1.add(label1, cc.xy(3, 1));
        final JLabel label2 = new JLabel();
        label2.setText("分钟");
        panel1.add(label2, cc.xy(3, 2));
        final JLabel label3 = new JLabel();
        label3.setText("终端等待从动站的超时时间");
        panel1.add(label3, cc.xy(1, 3));
        spinner_timeouts = new JSpinner();
        panel1.add(spinner_timeouts, cc.xy(2, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JideLabel jideLabel1 = new JideLabel();
        jideLabel1.setText("终端等待从动站响应的重发次数 ");
        panel1.add(jideLabel1, cc.xy(1, 4, CellConstraints.RIGHT, CellConstraints.CENTER));
        final JideLabel jideLabel2 = new JideLabel();
        jideLabel2.setText("需要主站确认的通信服务（CON=1）的标志  ");
        panel1.add(jideLabel2, cc.xy(1, 5));
        spinner_repeat = new JSpinner();
        panel1.add(spinner_repeat, cc.xy(2, 4, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JideLabel jideLabel3 = new JideLabel();
        jideLabel3.setText("心跳周期 ");
        panel1.add(jideLabel3, cc.xy(1, 6));
        txt_heart_beat = new JTextField();
        panel1.add(txt_heart_beat, cc.xy(2, 6, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(panel2, cc.xy(2, 5));
        Rad = new JRadioButton();
        Rad.setText("需要确认");
        panel2.add(Rad);
        RadioButton = new JRadioButton();
        RadioButton.setText("无需确认");
        panel2.add(RadioButton);
        final JLabel label4 = new JLabel();
        label4.setText("秒");
        panel1.add(label4, cc.xy(3, 3));
        final JLabel label5 = new JLabel();
        label5.setText("次");
        panel1.add(label5, cc.xy(3, 4));
        final JLabel label6 = new JLabel();
        label6.setText("秒");
        panel1.add(label6, cc.xy(3, 6));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(RadioButton);
        buttonGroup.add(RadioButton);
        buttonGroup.add(Rad);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
